
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORNOTleftANDleftEQUALSNOT_EQUALSleftLESS_THANLESS_THAN_OR_EQGREATER_THANGREATER_THAN_OR_EQleftPLUSMINUSleftMULTIPLYDIVIDEleftUNARYAND AND_BITWISE BOOLEAN BREAK CLASS COLON COMMA CONTINUE DEDENT DIGIT DIVIDE DOT ELSE ELSE_IF EQUALS EQUAL_ASSIGN FALSE FLOAT FOR FROM GREATER_THAN GREATER_THAN_OR_EQ ID IF IMPORT IN INDENT INT LEN LESS_THAN LESS_THAN_OR_EQ LIST L_BRACKET L_PARENTHESE METHOD_DEF MINUS MULTIPLY NEWLINE NOT NOT_EQUALS OR OR_BITWISE PASS PLUS POWER RANGE RETURN RIGHT_ARROW R_BRACKET R_PARENTHESE SELF STRING STRING_LITERAL TAB TRUE WHILE\n        program : statements\n        \n        statements : statement\n                   | statement statements\n        \n        statement : simple_statements\n                  | statement_with_block\n                  | NEWLINE\n        \n        simple_statements : simple_statement NEWLINE\n        \n        statement_with_block : class_decl\n                             | method_decl\n                             | if_stmnt\n                             | elif_stmnt\n                             | else_statement\n                             | for_statement\n                             | while_statement\n        \n        simple_statement : reserved_words_statement\n        \n        simple_statement : variable_assignment\n                         | expressions_wrapper\n                         | import_statement\n                         | return_statement\n                         | id_\n        \n         class_decl : CLASS ID COLON block\n                    | CLASS ID L_PARENTHESE id_ R_PARENTHESE COLON block\n        \n        method_decl : METHOD_DEF ID L_PARENTHESE R_PARENTHESE COLON block\n                    | METHOD_DEF ID L_PARENTHESE SELF R_PARENTHESE COLON block\n        \n        method_decl : METHOD_DEF ID L_PARENTHESE R_PARENTHESE RIGHT_ARROW TYPE COLON block\n                    | METHOD_DEF ID L_PARENTHESE SELF R_PARENTHESE RIGHT_ARROW TYPE COLON block\n        \n        method_decl : METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_wrapper R_PARENTHESE COLON block\n                    | METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_wrapper R_PARENTHESE COLON block\n        \n        method_decl : METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block\n                    | METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block\n        \n        method_decl : METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block\n                    | METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block\n        \n        method_decl : METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE COLON block\n                    | METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE COLON block\n        \n        ids_one_or_more_in_commas_with_types_wrapper : ids_one_or_more_in_commas_with_types\n        \n        ids_one_or_more_in_commas_with_types : id_ COLON TYPE\n                                             | id_ COLON TYPE COMMA ids_one_or_more_in_commas_with_types\n        \n        if_stmnt : IF expression COLON block\n        \n        if_stmnt : IF expression COLON block elif_stmnt\n                 | IF expression COLON block else_statement\n        \n        elif_stmnt : ELSE_IF expression COLON block\n        \n        elif_stmnt : ELSE_IF expression COLON block elif_stmnt\n                   | ELSE_IF expression COLON block else_statement\n        \n        else_statement : ELSE COLON block\n        \n        for_statement : FOR for_stmnt_parameter_wrapper COLON block\n        \n        for_stmnt_parameter_wrapper : id_ IN RANGE L_PARENTHESE expression R_PARENTHESE\n                                    | id_ IN RANGE L_PARENTHESE integer_number R_PARENTHESE\n                                    | id_ IN RANGE L_PARENTHESE integer_number COMMA integer_number R_PARENTHESE\n                                    | id_ IN RANGE L_PARENTHESE integer_number COMMA integer_number COMMA integer_number R_PARENTHESE\n        \n        while_statement : WHILE expression COLON block\n        \n        import_statement : IMPORT id_\n        \n        import_statement : FROM id_ IMPORT id_\n        \n        return_statement : RETURN expression\n        \n        block : NEWLINE INDENT statements DEDENT\n        \n        block : statements\n        \n        expressions_wrapper : expressions\n        \n        expressions : expression\n                    | expression COMMA expressions\n        \n        expression : LEN L_PARENTHESE expressions_wrapper R_PARENTHESE\n        \n        expression : comparison_expressions\n                   | arithmetic_expression\n                   | function_call_expression\n        \n        expression :  L_PARENTHESE expression R_PARENTHESE\n        \n        function_call_expression : id_ L_PARENTHESE expressions_wrapper R_PARENTHESE\n        \n        function_call_expression : id_ L_PARENTHESE R_PARENTHESE\n        \n        function_call_expression : id_ DOT function_call_expression\n        \n        comparison_expressions : comparison_expr_OR\n        \n        comparison_expr_OR : comparison_expr_OR OR comparison_expr_AND\n                           | comparison_expr_AND\n        \n        comparison_expr_AND : comparison_expr_AND AND comparison_expr_high_prec\n                            | comparison_expr_high_prec\n        \n        comparison_expr_high_prec : comparison_expr_high_prec EQUALS comparison_expr_base\n                                  | comparison_expr_high_prec NOT_EQUALS comparison_expr_base\n                                  | comparison_expr_high_prec LESS_THAN comparison_expr_base\n                                  | comparison_expr_high_prec LESS_THAN_OR_EQ comparison_expr_base\n                                  | comparison_expr_high_prec GREATER_THAN comparison_expr_base\n                                  | comparison_expr_high_prec GREATER_THAN_OR_EQ comparison_expr_base\n                                  | comparison_expr_base\n                                  | NOT comparison_expr_base\n        \n        comparison_expr_base : all_types\n             | id_\n             | arithmetic_expression\n             | function_call_expression\n        \n        comparison_expr_base : L_PARENTHESE comparison_expressions R_PARENTHESE\n        \n        all_types : boolean_types\n                  | id_\n                  | integer_number\n                  | float_number\n                  | string_object\n                  | list_object\n        \n        arithmetic_expression : MINUS arithmetic_expression %prec UNARY\n        arithmetic_expression : arithmetic_expression PLUS termarithmetic_expression : arithmetic_expression MINUS termarithmetic_expression : termterm : term MULTIPLY factorterm : term DIVIDE factorterm : factor\n                | function_call_expression\n        factor : integer_number\n                  | float_number\n                  | id_factor : L_PARENTHESE arithmetic_expression R_PARENTHESE\n        variable_assignment : id_ EQUAL_ASSIGN expression\n        \n        variable_assignment : id_ arithmetic_op EQUAL_ASSIGN arithmetic_expression\n        \n        list_object : L_BRACKET R_BRACKET\n        \n        list_object : L_BRACKET types_one_or_more_in_commas R_BRACKET\n                    | L_BRACKET ids_one_or_more_in_commas R_BRACKET\n        \n        list_element : id_ L_BRACKET arithmetic_expression R_BRACKET\n        \n        ids_one_or_more_in_commas_wrapper : ids_one_or_more_in_commas\n        \n        ids_one_or_more_in_commas : id_\n                                  | id_ COMMA types_one_or_more_in_commas\n        \n        types_one_or_more_in_commas : all_types\n                                    | all_types COMMA integer_number_one_or_more_in_commas\n                                    | all_types COMMA boolean_types_one_or_more_in_commas\n                                    | all_types COMMA float_number_one_or_more_in_commas\n                                    | all_types COMMA string_object_one_or_more_in_commas\n                                    | all_types COMMA ids_one_or_more_in_commas\n        \n        boolean_types_one_or_more_in_commas : boolean_types\n                                            | boolean_types COMMA types_one_or_more_in_commas\n        \n        integer_number_one_or_more_in_commas : integer_number\n                                             | integer_number COMMA types_one_or_more_in_commas\n        \n        float_number_one_or_more_in_commas : float_number\n                                           | float_number COMMA types_one_or_more_in_commas\n        \n        string_object_one_or_more_in_commas : string_object\n                                            | string_object COMMA types_one_or_more_in_commas\n        \n        arithmetic_op : PLUS\n                       | MINUS\n                       | MULTIPLY\n                       | DIVIDE\n                       | POWER\n        \n        comparison_ops : AND\n                       | OR\n                       | NOT\n                       | EQUALS\n                       | NOT_EQUALS\n                       | LESS_THAN\n                       | LESS_THAN_OR_EQ\n                       | GREATER_THAN\n                       | GREATER_THAN_OR_EQ\n\n        \n        id_ : ID\n        \n        id_ : id_ DOT id_\n        \n        id_ : SELF DOT id_\n        \n        id_ : list_element\n        \n        TYPE : BOOLEAN\n             | FLOAT\n             | STRING\n             | INT\n             | LIST\n        \n        string_object : STRING_LITERAL\n        boolean_types : TRUE\n                         | FALSEfloat_number : number DOT numberinteger_number : numbernumber : DIGIT\n        reserved_words_statement : PASS\n                                 | RETURN\n                                 | CONTINUE\n                                 | BREAK\n                                 | SELF\n        empty :'
    
_lr_action_items = {'NEWLINE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,25,27,32,33,34,35,36,37,40,43,44,45,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,80,87,91,94,96,105,106,107,108,109,120,121,122,123,125,126,128,130,131,134,135,137,138,139,142,143,144,145,146,147,148,149,152,153,154,156,157,161,163,164,165,166,167,168,169,170,171,172,178,179,180,181,182,184,192,193,194,195,197,198,199,212,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[6,6,-4,-5,-6,65,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-140,-159,-57,-155,-156,-157,-158,-61,-56,-143,-60,-62,-67,-94,-69,-97,-71,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-3,-7,-81,147,-53,-51,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-103,-141,-66,-65,147,-63,-102,-84,-142,147,-58,147,-44,-6,-55,147,147,-92,-93,-106,-107,-68,-95,-101,-96,-70,-72,-73,-74,-75,-76,-77,-152,-104,-108,-64,-21,-141,-38,-41,6,-45,-141,-50,-52,-59,147,-39,-40,-42,-43,147,-23,147,147,147,-54,-22,147,-24,-27,-33,-25,147,147,147,147,147,-26,-28,-34,-29,-31,147,147,-30,-32,]),'CLASS':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[21,21,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,21,21,21,21,-44,-6,-55,21,21,-21,-38,-41,21,-45,-50,21,-39,-40,-42,-43,21,-23,21,21,21,-54,-22,21,-24,-27,-33,-25,21,21,21,21,21,-26,-28,-34,-29,-31,21,21,-30,-32,]),'METHOD_DEF':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[24,24,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,24,24,24,24,-44,-6,-55,24,24,-21,-38,-41,24,-45,-50,24,-39,-40,-42,-43,24,-23,24,24,24,-54,-22,24,-24,-27,-33,-25,24,24,24,24,24,-26,-28,-34,-29,-31,24,24,-30,-32,]),'IF':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[26,26,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,26,26,26,26,-44,-6,-55,26,26,-21,-38,-41,26,-45,-50,26,-39,-40,-42,-43,26,-23,26,26,26,-54,-22,26,-24,-27,-33,-25,26,26,26,26,26,-26,-28,-34,-29,-31,26,26,-30,-32,]),'ELSE_IF':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[28,28,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,28,28,28,28,-44,-6,-55,28,28,-21,28,28,28,-45,-50,28,-39,-40,-42,-43,28,-23,28,28,28,-54,-22,28,-24,-27,-33,-25,28,28,28,28,28,-26,-28,-34,-29,-31,28,28,-30,-32,]),'ELSE':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[29,29,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,29,29,29,29,-44,-6,-55,29,29,-21,29,29,29,-45,-50,29,-39,-40,-42,-43,29,-23,29,29,29,-54,-22,29,-24,-27,-33,-25,29,29,29,29,29,-26,-28,-34,-29,-31,29,29,-30,-32,]),'FOR':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[30,30,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,30,30,30,30,-44,-6,-55,30,30,-21,-38,-41,30,-45,-50,30,-39,-40,-42,-43,30,-23,30,30,30,-54,-22,30,-24,-27,-33,-25,30,30,30,30,30,-26,-28,-34,-29,-31,30,30,-30,-32,]),'WHILE':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[31,31,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,31,31,31,31,-44,-6,-55,31,31,-21,-38,-41,31,-45,-50,31,-39,-40,-42,-43,31,-23,31,31,31,-54,-22,31,-24,-27,-33,-25,31,31,31,31,31,-26,-28,-34,-29,-31,31,31,-30,-32,]),'PASS':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[32,32,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,32,32,32,32,-44,-6,-55,32,32,-21,-38,-41,32,-45,-50,32,-39,-40,-42,-43,32,-23,32,32,32,-54,-22,32,-24,-27,-33,-25,32,32,32,32,32,-26,-28,-34,-29,-31,32,32,-30,-32,]),'RETURN':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[33,33,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,33,33,33,33,-44,-6,-55,33,33,-21,-38,-41,33,-45,-50,33,-39,-40,-42,-43,33,-23,33,33,33,-54,-22,33,-24,-27,-33,-25,33,33,33,33,33,-26,-28,-34,-29,-31,33,33,-30,-32,]),'CONTINUE':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[34,34,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,34,34,34,34,-44,-6,-55,34,34,-21,-38,-41,34,-45,-50,34,-39,-40,-42,-43,34,-23,34,34,34,-54,-22,34,-24,-27,-33,-25,34,34,34,34,34,-26,-28,-34,-29,-31,34,34,-30,-32,]),'BREAK':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[35,35,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,35,35,35,35,-44,-6,-55,35,35,-21,-38,-41,35,-45,-50,35,-39,-40,-42,-43,35,-23,35,35,35,-54,-22,35,-24,-27,-33,-25,35,35,35,35,35,-26,-28,-34,-29,-31,35,35,-30,-32,]),'SELF':([0,3,4,5,6,8,9,10,11,12,13,14,23,26,28,30,31,33,38,39,41,46,54,64,65,66,68,69,70,83,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,129,135,136,140,141,143,145,146,147,148,149,151,152,155,158,159,173,182,192,193,194,195,198,215,218,222,223,224,225,227,228,229,230,231,232,233,240,244,247,249,256,257,258,262,265,266,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[25,25,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,81,81,81,81,81,81,81,81,81,81,81,-3,-7,81,81,81,81,81,81,25,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,25,81,81,186,25,25,-44,-6,-55,25,81,25,81,81,81,81,-21,-38,-41,25,-45,-50,25,81,-39,-40,-42,-43,81,81,81,81,81,25,-23,25,25,25,-54,-22,25,-24,-27,-33,81,-25,25,25,25,25,25,-26,-28,-34,-29,-31,25,25,-30,-32,]),'IMPORT':([0,3,4,5,6,8,9,10,11,12,13,14,22,40,64,65,87,95,135,142,143,145,146,147,148,149,152,180,182,192,193,194,195,197,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[38,38,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-140,-143,-3,-7,38,155,38,-142,38,38,-44,-6,-55,38,38,-108,-21,-38,-41,38,-45,-141,-50,38,-39,-40,-42,-43,38,-23,38,38,38,-54,-22,38,-24,-27,-33,-25,38,38,38,38,38,-26,-28,-34,-29,-31,38,38,-30,-32,]),'FROM':([0,3,4,5,6,8,9,10,11,12,13,14,64,65,87,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[39,39,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,39,39,39,39,-44,-6,-55,39,39,-21,-38,-41,39,-45,-50,39,-39,-40,-42,-43,39,-23,39,39,39,-54,-22,39,-24,-27,-33,-25,39,39,39,39,39,-26,-28,-34,-29,-31,39,39,-30,-32,]),'ID':([0,3,4,5,6,8,9,10,11,12,13,14,21,23,24,26,28,30,31,33,38,39,41,46,54,64,65,66,68,69,70,83,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,129,135,136,140,141,143,145,146,147,148,149,151,152,155,158,159,173,182,192,193,194,195,198,215,218,222,223,224,225,227,228,229,230,231,232,233,240,244,247,249,256,257,258,262,265,266,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[22,22,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,76,22,82,22,22,22,22,22,22,22,22,22,22,-3,-7,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-44,-6,-55,22,22,22,22,22,22,22,-21,-38,-41,22,-45,-50,22,22,-39,-40,-42,-43,22,22,22,22,22,22,-23,22,22,22,-54,-22,22,-24,-27,-33,22,-25,22,22,22,22,22,-26,-28,-34,-29,-31,22,22,-30,-32,]),'LEN':([0,3,4,5,6,8,9,10,11,12,13,14,23,26,28,31,33,64,65,66,70,85,87,103,135,143,145,146,147,148,149,152,182,192,193,194,195,198,215,222,223,224,225,227,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[42,42,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,42,42,42,42,42,-3,-7,42,42,42,42,42,42,42,42,-44,-6,-55,42,42,-21,-38,-41,42,-45,-50,42,-39,-40,-42,-43,42,42,-23,42,42,42,-54,-22,42,-24,-27,-33,-25,42,42,42,42,42,-26,-28,-34,-29,-31,42,42,-30,-32,]),'L_PARENTHESE':([0,3,4,5,6,8,9,10,11,12,13,14,20,22,23,26,28,31,33,40,42,46,54,64,65,66,69,70,76,80,82,85,87,92,93,103,104,109,110,111,112,113,114,115,116,117,118,119,121,124,129,130,135,142,143,145,146,147,148,149,152,173,177,180,182,184,192,193,194,195,196,197,198,213,215,222,223,224,225,227,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[23,23,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,70,-140,23,23,23,23,23,-143,103,110,124,-3,-7,23,110,23,136,70,141,23,23,110,110,23,124,70,110,110,110,124,124,124,124,124,124,124,70,173,110,70,23,-142,23,23,-44,-6,-55,23,23,173,70,-108,-21,70,-38,-41,23,-45,227,-141,-50,70,23,-39,-40,-42,-43,23,23,-23,23,23,23,-54,-22,23,-24,-27,-33,-25,23,23,23,23,23,-26,-28,-34,-29,-31,23,23,-30,-32,]),'MINUS':([0,3,4,5,6,8,9,10,11,12,13,14,20,22,23,26,28,31,33,36,40,44,46,47,49,51,52,54,55,57,64,65,66,69,70,78,80,85,87,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,121,122,123,124,125,126,129,130,131,132,134,135,138,142,143,145,146,147,148,149,152,153,154,162,163,164,165,173,175,176,177,178,179,180,181,182,184,192,193,194,195,197,198,213,215,222,223,224,225,227,232,233,240,244,247,249,251,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[46,46,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,72,-140,46,46,46,46,46,93,-143,-98,46,-94,-97,-99,-100,46,-153,-154,-3,-7,46,46,46,93,-101,46,46,46,46,-91,-98,-99,-100,-101,46,46,46,46,46,46,46,46,-101,93,-98,46,-99,-100,46,-141,-66,93,-65,46,-102,-142,46,46,-44,-6,-55,46,46,-92,-93,93,-95,-101,-96,46,93,-98,-101,-152,93,-108,-64,-21,-141,-38,-41,46,-45,-141,-50,-101,46,-39,-40,-42,-43,46,46,-23,46,46,46,-54,-99,-22,46,-24,-27,-33,-25,46,46,46,46,46,-26,-28,-34,-29,-31,46,46,-30,-32,]),'NOT':([0,3,4,5,6,8,9,10,11,12,13,14,23,26,28,31,33,64,65,66,70,85,87,103,104,113,124,135,143,145,146,147,148,149,152,173,182,192,193,194,195,198,215,222,223,224,225,227,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[54,54,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,54,54,54,54,54,-3,-7,54,54,54,54,54,54,54,54,54,54,54,-44,-6,-55,54,54,54,-21,-38,-41,54,-45,-50,54,-39,-40,-42,-43,54,54,-23,54,54,54,-54,-22,54,-24,-27,-33,-25,54,54,54,54,54,-26,-28,-34,-29,-31,54,54,-30,-32,]),'DIGIT':([0,3,4,5,6,8,9,10,11,12,13,14,23,26,28,31,33,41,46,54,64,65,66,69,70,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,127,129,135,143,145,146,147,148,149,152,158,159,173,182,192,193,194,195,198,215,222,223,224,225,227,228,229,230,231,232,233,240,244,247,249,256,257,258,262,265,269,270,271,272,275,276,277,282,283,286,287,288,289,291,292,294,295,],[57,57,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,57,57,57,57,57,57,57,57,-3,-7,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-44,-6,-55,57,57,57,57,57,-21,-38,-41,57,-45,-50,57,-39,-40,-42,-43,57,57,57,57,57,57,-23,57,57,57,-54,-22,57,-24,-27,-33,57,-25,57,57,57,57,57,-26,-28,-34,-29,-31,57,57,57,-30,-32,]),'TRUE':([0,3,4,5,6,8,9,10,11,12,13,14,23,26,28,31,33,41,54,64,65,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,146,147,148,149,152,158,159,173,182,192,193,194,195,198,215,222,223,224,225,227,228,229,230,231,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[61,61,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,61,61,61,61,61,61,61,-3,-7,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-44,-6,-55,61,61,61,61,61,-21,-38,-41,61,-45,-50,61,-39,-40,-42,-43,61,61,61,61,61,61,-23,61,61,61,-54,-22,61,-24,-27,-33,-25,61,61,61,61,61,-26,-28,-34,-29,-31,61,61,-30,-32,]),'FALSE':([0,3,4,5,6,8,9,10,11,12,13,14,23,26,28,31,33,41,54,64,65,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,146,147,148,149,152,158,159,173,182,192,193,194,195,198,215,222,223,224,225,227,228,229,230,231,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[62,62,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,62,62,62,62,62,62,62,-3,-7,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-44,-6,-55,62,62,62,62,62,-21,-38,-41,62,-45,-50,62,-39,-40,-42,-43,62,62,62,62,62,62,-23,62,62,62,-54,-22,62,-24,-27,-33,-25,62,62,62,62,62,-26,-28,-34,-29,-31,62,62,-30,-32,]),'STRING_LITERAL':([0,3,4,5,6,8,9,10,11,12,13,14,23,26,28,31,33,41,54,64,65,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,146,147,148,149,152,158,159,173,182,192,193,194,195,198,215,222,223,224,225,227,228,229,230,231,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,282,283,286,287,288,291,292,294,295,],[63,63,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,63,63,63,63,63,63,63,-3,-7,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-44,-6,-55,63,63,63,63,63,-21,-38,-41,63,-45,-50,63,-39,-40,-42,-43,63,63,63,63,63,63,-23,63,63,63,-54,-22,63,-24,-27,-33,-25,63,63,63,63,63,-26,-28,-34,-29,-31,63,63,-30,-32,]),'L_BRACKET':([0,3,4,5,6,8,9,10,11,12,13,14,20,22,23,26,28,31,33,40,41,54,64,65,66,70,80,85,87,89,94,95,100,103,104,109,113,114,115,116,117,118,119,121,124,130,135,142,143,145,146,147,148,149,152,159,164,173,177,180,182,183,184,191,192,193,194,195,197,198,199,209,210,213,215,222,223,224,225,227,228,229,230,231,232,233,240,244,247,249,256,257,258,262,265,270,271,272,275,276,277,278,282,283,286,287,288,291,292,294,295,],[41,41,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,69,-140,41,41,41,41,41,-143,41,41,-3,-7,41,41,69,41,41,69,69,69,69,41,41,69,41,41,41,41,41,41,41,69,41,69,41,69,41,41,-44,-6,-55,41,41,41,69,41,69,-108,-21,69,69,69,-38,-41,41,-45,69,-50,69,69,69,69,41,-39,-40,-42,-43,41,41,41,41,41,41,-23,41,41,41,-54,-22,41,-24,-27,-33,-25,41,41,41,41,41,69,-26,-28,-34,-29,-31,41,41,-30,-32,]),'$end':([1,2,3,4,5,6,8,9,10,11,12,13,14,64,65,146,147,148,182,192,193,195,198,222,223,224,225,233,249,256,258,262,265,270,282,283,286,287,288,294,295,],[0,-1,-2,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,-44,-6,-55,-21,-38,-41,-45,-50,-39,-40,-42,-43,-23,-54,-22,-24,-27,-33,-25,-26,-28,-34,-29,-31,-30,-32,]),'DEDENT':([3,4,5,6,8,9,10,11,12,13,14,64,65,146,147,148,182,192,193,195,198,222,223,224,225,226,233,249,256,258,262,265,270,282,283,286,287,288,294,295,],[-2,-4,-5,-6,-8,-9,-10,-11,-12,-13,-14,-3,-7,-44,-6,-55,-21,-38,-41,-45,-50,-39,-40,-42,-43,249,-23,-54,-22,-24,-27,-33,-25,-26,-28,-34,-29,-31,-30,-32,]),'EQUAL_ASSIGN':([20,22,40,67,71,72,73,74,75,130,142,180,197,],[66,-140,-143,129,-126,-127,-128,-129,-130,-141,-142,-108,-141,]),'DOT':([20,22,25,40,55,57,80,81,89,94,95,100,109,121,130,142,164,177,180,183,184,186,191,197,199,209,210,213,278,],[68,-140,83,-143,127,-154,140,83,151,151,151,151,140,68,68,151,151,140,-108,151,140,83,151,151,151,151,151,140,151,]),'MULTIPLY':([20,22,40,44,47,49,51,52,55,57,80,106,107,108,109,121,123,125,126,130,131,134,138,142,153,154,163,164,165,176,177,178,180,181,184,197,213,251,],[73,-140,-143,-98,111,-97,-99,-100,-153,-154,-101,-98,-99,-100,-101,-101,-98,-99,-100,-141,-66,-65,-102,-142,111,111,-95,-101,-96,-98,-101,-152,-108,-64,-141,-141,-101,-99,]),'DIVIDE':([20,22,40,44,47,49,51,52,55,57,80,106,107,108,109,121,123,125,126,130,131,134,138,142,153,154,163,164,165,176,177,178,180,181,184,197,213,251,],[74,-140,-143,-98,112,-97,-99,-100,-153,-154,-101,-98,-99,-100,-101,-101,-98,-99,-100,-141,-66,-65,-102,-142,112,112,-95,-101,-96,-98,-101,-152,-108,-64,-141,-141,-101,-99,]),'PLUS':([20,22,36,40,44,47,49,51,52,55,57,78,80,105,106,107,108,109,121,122,123,125,126,130,131,132,134,138,142,153,154,162,163,164,165,175,176,177,178,179,180,181,184,197,213,251,],[71,-140,92,-143,-98,-94,-97,-99,-100,-153,-154,92,-101,-91,-98,-99,-100,-101,-101,92,-98,-99,-100,-141,-66,92,-65,-102,-142,-92,-93,92,-95,-101,-96,92,-98,-101,-152,92,-108,-64,-141,-141,-101,-99,]),'COMMA':([20,22,27,36,40,43,44,45,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,80,96,99,100,101,102,105,106,107,108,109,120,121,122,123,125,126,130,131,134,137,138,139,142,153,154,156,157,161,163,164,165,166,167,168,169,170,171,172,178,180,181,184,186,191,197,205,206,207,208,209,210,212,235,236,237,238,239,248,251,280,281,],[-81,-140,85,-61,-143,-60,-62,-67,-94,-69,-97,-71,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-81,-105,158,159,-87,-88,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-63,-102,-84,-142,-92,-93,-106,-107,-68,-95,-101,-96,-70,-72,-73,-74,-75,-76,-77,-152,-108,-64,-141,218,159,-141,228,229,230,231,159,-86,-59,-144,-145,-146,-147,-148,266,269,289,-153,]),'EQUALS':([20,22,36,40,44,47,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,-94,-97,114,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,-95,-101,-96,114,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'NOT_EQUALS':([20,22,36,40,44,47,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,-94,-97,115,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,-95,-101,-96,115,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'LESS_THAN':([20,22,36,40,44,47,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,-94,-97,116,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,-95,-101,-96,116,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'LESS_THAN_OR_EQ':([20,22,36,40,44,47,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,-94,-97,117,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,-95,-101,-96,117,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'GREATER_THAN':([20,22,36,40,44,47,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,-94,-97,118,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,-95,-101,-96,118,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'GREATER_THAN_OR_EQ':([20,22,36,40,44,47,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,-94,-97,119,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,-95,-101,-96,119,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'AND':([20,22,36,40,44,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,161,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,-94,113,-97,-71,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,113,-95,-101,-96,-70,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'OR':([20,22,36,40,44,45,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,78,80,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,138,139,142,153,154,156,157,161,163,164,165,166,167,168,169,170,171,172,175,176,177,178,180,181,184,197,213,251,],[-81,-140,-82,-143,-83,104,-94,-69,-97,-71,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,-82,-81,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-102,-84,-142,-92,-93,-106,-107,-68,-95,-101,-96,-70,-72,-73,-74,-75,-76,-77,-82,-83,-81,-152,-108,-64,-141,-141,-81,-87,]),'POWER':([20,22,40,130,142,180,197,],[75,-140,-143,-141,-142,-108,-141,]),'R_PARENTHESE':([22,27,36,37,40,43,44,45,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,70,77,78,79,80,96,99,101,102,105,106,107,108,109,120,121,122,123,125,126,130,131,133,134,137,138,139,141,142,144,153,154,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,180,181,183,184,186,187,188,189,190,191,197,200,201,202,203,204,205,206,207,208,209,210,211,212,213,235,236,237,238,239,242,243,248,250,251,252,253,254,255,279,280,281,293,],[-140,-57,-61,-56,-143,-60,-62,-67,-94,-69,-97,-71,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,134,137,138,139,-81,-105,-112,-87,-88,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,181,-65,-63,-102,-84,185,-142,-58,-92,-93,-106,-107,212,-68,138,-95,-101,-96,-70,-72,-73,-74,-75,-76,-77,139,138,-83,-81,-152,-108,-64,214,-141,217,219,220,-109,-35,-110,-141,-113,-114,-115,-116,-117,-120,-118,-122,-124,-110,-86,-111,-59,-81,-144,-145,-146,-147,-148,260,261,-36,267,268,-121,-119,-123,-125,-37,290,-153,296,]),'COLON':([22,29,36,40,43,44,45,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,76,80,84,86,88,90,96,105,106,107,108,109,120,121,122,123,125,126,130,131,134,137,138,139,142,153,154,156,157,161,163,164,165,166,167,168,169,170,171,172,178,180,181,184,185,191,197,212,214,217,219,220,234,235,236,237,238,239,259,260,261,263,264,267,268,278,284,285,290,296,],[-140,87,-61,-143,-60,-62,-67,-94,-69,-97,-71,-87,-88,-78,-153,-80,-154,-85,-89,-90,-150,-151,-149,135,-81,143,145,149,152,-105,-91,-98,-99,-100,-101,-79,-81,-82,-83,-87,-88,-141,-66,-65,-63,-102,-84,-142,-92,-93,-106,-107,-68,-95,-101,-96,-70,-72,-73,-74,-75,-76,-77,-152,-108,-64,-141,215,221,-141,-59,232,240,244,247,257,-144,-145,-146,-147,-148,271,272,275,276,277,-46,-47,221,291,292,-48,-49,]),'IN':([22,40,89,142,180,197,],[-140,-143,150,-142,-108,-141,]),'R_BRACKET':([22,40,41,47,49,55,57,58,59,60,61,62,63,96,97,98,99,100,101,102,105,106,107,108,109,131,132,134,138,142,153,154,156,157,163,164,165,178,180,181,184,197,200,201,202,203,204,205,206,207,208,209,210,211,252,253,254,255,],[-140,-143,96,-94,-97,-153,-154,-85,-89,-90,-150,-151,-149,-105,156,157,-112,-86,-87,-88,-91,-98,-99,-100,-101,-66,180,-65,-102,-142,-92,-93,-106,-107,-95,-101,-96,-152,-108,-64,-141,-141,-113,-114,-115,-116,-117,-120,-118,-122,-124,-110,-86,-111,-121,-119,-123,-125,]),'INDENT':([147,],[194,]),'RANGE':([150,],[196,]),'RIGHT_ARROW':([185,217,219,220,260,261,],[216,241,245,246,273,274,]),'BOOLEAN':([216,221,241,245,246,273,274,],[235,235,235,235,235,235,235,]),'FLOAT':([216,221,241,245,246,273,274,],[236,236,236,236,236,236,236,]),'STRING':([216,221,241,245,246,273,274,],[237,237,237,237,237,237,237,]),'INT':([216,221,241,245,246,273,274,],[238,238,238,238,238,238,238,]),'LIST':([216,221,241,245,246,273,274,],[239,239,239,239,239,239,239,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[2,64,148,148,148,148,148,148,226,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'statement':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'simple_statements':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'statement_with_block':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'simple_statement':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'class_decl':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'method_decl':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'if_stmnt':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'elif_stmnt':([0,3,87,135,143,145,149,152,192,193,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[11,11,11,11,11,11,11,11,222,224,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'else_statement':([0,3,87,135,143,145,149,152,192,193,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[12,12,12,12,12,12,12,12,223,225,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'for_statement':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'while_statement':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'reserved_words_statement':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'variable_assignment':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expressions_wrapper':([0,3,70,87,103,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[17,17,133,17,160,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'import_statement':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'return_statement':([0,3,87,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'id_':([0,3,23,26,28,30,31,33,38,39,41,46,54,66,68,69,70,83,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,129,135,136,140,141,143,145,149,151,152,155,158,159,173,194,215,218,227,228,229,230,231,232,240,244,247,257,266,271,272,275,276,277,291,292,],[20,20,80,80,80,89,80,80,94,95,100,109,121,80,130,109,80,142,80,20,109,109,80,121,109,164,164,121,121,121,121,121,121,121,177,109,20,183,184,191,20,20,20,197,20,199,209,210,213,20,20,191,80,210,210,210,210,20,20,20,20,20,278,20,20,20,20,20,20,20,]),'expression':([0,3,23,26,28,31,33,66,70,85,87,103,135,143,145,149,152,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[27,27,77,84,86,90,91,128,27,27,27,27,27,27,27,27,27,27,27,250,27,27,27,27,27,27,27,27,27,27,27,27,]),'arithmetic_expression':([0,3,23,26,28,31,33,46,54,66,69,70,85,87,103,104,110,113,114,115,116,117,118,119,124,129,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[36,36,78,36,36,36,36,105,122,36,132,36,36,36,36,122,162,122,122,122,122,122,122,122,175,179,36,36,36,36,36,175,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expressions':([0,3,70,85,87,103,135,143,145,149,152,194,215,232,240,244,247,257,271,272,275,276,277,291,292,],[37,37,37,144,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'list_element':([0,3,23,26,28,30,31,33,38,39,41,46,54,66,68,69,70,83,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,129,135,136,140,141,143,145,149,151,152,155,158,159,173,194,215,218,227,228,229,230,231,232,240,244,247,257,266,271,272,275,276,277,291,292,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'comparison_expressions':([0,3,23,26,28,31,33,66,70,85,87,103,124,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[43,43,79,43,43,43,43,43,43,43,43,43,174,43,43,43,43,43,174,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'function_call_expression':([0,3,23,26,28,31,33,46,54,66,68,69,70,85,87,92,93,103,104,110,113,114,115,116,117,118,119,124,129,135,140,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[44,44,44,44,44,44,44,106,123,44,131,106,44,44,44,106,106,44,123,106,123,123,123,123,123,123,123,176,106,44,131,44,44,44,44,176,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'comparison_expr_OR':([0,3,23,26,28,31,33,66,70,85,87,103,124,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'term':([0,3,23,26,28,31,33,46,54,66,69,70,85,87,92,93,103,104,110,113,114,115,116,117,118,119,124,129,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,153,154,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'comparison_expr_AND':([0,3,23,26,28,31,33,66,70,85,87,103,104,124,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[48,48,48,48,48,48,48,48,48,48,48,48,161,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'factor':([0,3,23,26,28,31,33,46,54,66,69,70,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,129,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,163,165,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'comparison_expr_high_prec':([0,3,23,26,28,31,33,66,70,85,87,103,104,113,124,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[50,50,50,50,50,50,50,50,50,50,50,50,50,166,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'integer_number':([0,3,23,26,28,31,33,41,46,54,66,69,70,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,129,135,143,145,149,152,158,159,173,194,215,227,228,229,230,231,232,240,244,247,257,269,271,272,275,276,277,289,291,292,],[51,51,51,51,51,51,51,101,107,125,51,107,51,51,51,107,107,51,125,107,107,107,125,125,125,125,125,125,125,51,107,51,51,51,51,51,205,101,51,51,51,251,101,101,101,101,51,51,51,51,51,280,51,51,51,51,51,293,51,51,]),'float_number':([0,3,23,26,28,31,33,41,46,54,66,69,70,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,129,135,143,145,149,152,158,159,173,194,215,227,228,229,230,231,232,240,244,247,257,271,272,275,276,277,291,292,],[52,52,52,52,52,52,52,102,108,126,52,108,52,52,52,108,108,52,126,108,108,108,126,126,126,126,126,126,126,52,108,52,52,52,52,52,207,102,52,52,52,52,102,102,102,102,52,52,52,52,52,52,52,52,52,52,52,52,]),'comparison_expr_base':([0,3,23,26,28,31,33,54,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,149,152,173,194,215,227,232,240,244,247,257,271,272,275,276,277,291,292,],[53,53,53,53,53,53,53,120,53,53,53,53,53,53,53,167,168,169,170,171,172,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'number':([0,3,23,26,28,31,33,41,46,54,66,69,70,85,87,92,93,103,104,110,111,112,113,114,115,116,117,118,119,124,127,129,135,143,145,149,152,158,159,173,194,215,227,228,229,230,231,232,240,244,247,257,269,271,272,275,276,277,289,291,292,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,178,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,281,55,55,55,55,55,281,55,55,]),'all_types':([0,3,23,26,28,31,33,41,54,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,149,152,159,173,194,215,227,228,229,230,231,232,240,244,247,257,271,272,275,276,277,291,292,],[56,56,56,56,56,56,56,99,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,99,56,56,56,56,99,99,99,99,56,56,56,56,56,56,56,56,56,56,56,56,]),'boolean_types':([0,3,23,26,28,31,33,41,54,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,149,152,158,159,173,194,215,227,228,229,230,231,232,240,244,247,257,271,272,275,276,277,291,292,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,206,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'string_object':([0,3,23,26,28,31,33,41,54,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,149,152,158,159,173,194,215,227,228,229,230,231,232,240,244,247,257,271,272,275,276,277,291,292,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,208,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'list_object':([0,3,23,26,28,31,33,41,54,66,70,85,87,103,104,113,114,115,116,117,118,119,124,135,143,145,149,152,159,173,194,215,227,228,229,230,231,232,240,244,247,257,271,272,275,276,277,291,292,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'arithmetic_op':([20,],[67,]),'for_stmnt_parameter_wrapper':([30,],[88,]),'types_one_or_more_in_commas':([41,159,228,229,230,231,],[97,211,252,253,254,255,]),'ids_one_or_more_in_commas':([41,141,158,218,],[98,189,204,189,]),'block':([87,135,143,145,149,152,215,232,240,244,247,257,271,272,275,276,277,291,292,],[146,182,192,193,195,198,233,256,258,262,265,270,282,283,286,287,288,294,295,]),'ids_one_or_more_in_commas_wrapper':([141,218,],[187,242,]),'ids_one_or_more_in_commas_with_types_wrapper':([141,218,],[188,243,]),'ids_one_or_more_in_commas_with_types':([141,218,266,],[190,190,279,]),'integer_number_one_or_more_in_commas':([158,],[200,]),'boolean_types_one_or_more_in_commas':([158,],[201,]),'float_number_one_or_more_in_commas':([158,],[202,]),'string_object_one_or_more_in_commas':([158,],[203,]),'TYPE':([216,221,241,245,246,273,274,],[234,248,259,263,264,284,285,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','pythonParser.py',25),
  ('statements -> statement','statements',1,'p_statements','pythonParser.py',33),
  ('statements -> statement statements','statements',2,'p_statements','pythonParser.py',34),
  ('statement -> simple_statements','statement',1,'p_statement','pythonParser.py',47),
  ('statement -> statement_with_block','statement',1,'p_statement','pythonParser.py',48),
  ('statement -> NEWLINE','statement',1,'p_statement','pythonParser.py',49),
  ('simple_statements -> simple_statement NEWLINE','simple_statements',2,'p_simple_statements','pythonParser.py',70),
  ('statement_with_block -> class_decl','statement_with_block',1,'p_statement_with_block','pythonParser.py',77),
  ('statement_with_block -> method_decl','statement_with_block',1,'p_statement_with_block','pythonParser.py',78),
  ('statement_with_block -> if_stmnt','statement_with_block',1,'p_statement_with_block','pythonParser.py',79),
  ('statement_with_block -> elif_stmnt','statement_with_block',1,'p_statement_with_block','pythonParser.py',80),
  ('statement_with_block -> else_statement','statement_with_block',1,'p_statement_with_block','pythonParser.py',81),
  ('statement_with_block -> for_statement','statement_with_block',1,'p_statement_with_block','pythonParser.py',82),
  ('statement_with_block -> while_statement','statement_with_block',1,'p_statement_with_block','pythonParser.py',83),
  ('simple_statement -> reserved_words_statement','simple_statement',1,'p_simple_statement_reserved','pythonParser.py',90),
  ('simple_statement -> variable_assignment','simple_statement',1,'p_simple_statement','pythonParser.py',97),
  ('simple_statement -> expressions_wrapper','simple_statement',1,'p_simple_statement','pythonParser.py',98),
  ('simple_statement -> import_statement','simple_statement',1,'p_simple_statement','pythonParser.py',99),
  ('simple_statement -> return_statement','simple_statement',1,'p_simple_statement','pythonParser.py',100),
  ('simple_statement -> id_','simple_statement',1,'p_simple_statement','pythonParser.py',101),
  ('class_decl -> CLASS ID COLON block','class_decl',4,'p_class_decl','pythonParser.py',112),
  ('class_decl -> CLASS ID L_PARENTHESE id_ R_PARENTHESE COLON block','class_decl',7,'p_class_decl','pythonParser.py',113),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE R_PARENTHESE COLON block','method_decl',6,'p_method_decl_no_params','pythonParser.py',127),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE SELF R_PARENTHESE COLON block','method_decl',7,'p_method_decl_no_params','pythonParser.py',128),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE R_PARENTHESE RIGHT_ARROW TYPE COLON block','method_decl',8,'p_method_decl_no_params_return_type','pythonParser.py',140),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE SELF R_PARENTHESE RIGHT_ARROW TYPE COLON block','method_decl',9,'p_method_decl_no_params_return_type','pythonParser.py',141),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_wrapper R_PARENTHESE COLON block','method_decl',7,'p_method_decl_params_no_types_no_return_type','pythonParser.py',155),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_wrapper R_PARENTHESE COLON block','method_decl',9,'p_method_decl_params_no_types_no_return_type','pythonParser.py',156),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block','method_decl',9,'p_method_decl_params_no_types_return_type','pythonParser.py',167),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block','method_decl',11,'p_method_decl_params_no_types_return_type','pythonParser.py',168),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block','method_decl',9,'p_method_decl_params_types_return_type','pythonParser.py',181),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE RIGHT_ARROW TYPE COLON block','method_decl',11,'p_method_decl_params_types_return_type','pythonParser.py',182),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE COLON block','method_decl',7,'p_method_decl_params_types_no_return_type','pythonParser.py',196),
  ('method_decl -> METHOD_DEF ID L_PARENTHESE SELF COMMA ids_one_or_more_in_commas_with_types_wrapper R_PARENTHESE COLON block','method_decl',9,'p_method_decl_params_types_no_return_type','pythonParser.py',197),
  ('ids_one_or_more_in_commas_with_types_wrapper -> ids_one_or_more_in_commas_with_types','ids_one_or_more_in_commas_with_types_wrapper',1,'p_ids_one_or_more_in_commas_with_types_wrapper','pythonParser.py',209),
  ('ids_one_or_more_in_commas_with_types -> id_ COLON TYPE','ids_one_or_more_in_commas_with_types',3,'p_ids_one_or_more_in_commas_with_types','pythonParser.py',216),
  ('ids_one_or_more_in_commas_with_types -> id_ COLON TYPE COMMA ids_one_or_more_in_commas_with_types','ids_one_or_more_in_commas_with_types',5,'p_ids_one_or_more_in_commas_with_types','pythonParser.py',217),
  ('if_stmnt -> IF expression COLON block','if_stmnt',4,'p_if_stmnt','pythonParser.py',235),
  ('if_stmnt -> IF expression COLON block elif_stmnt','if_stmnt',5,'p_if_stmnt_continued','pythonParser.py',242),
  ('if_stmnt -> IF expression COLON block else_statement','if_stmnt',5,'p_if_stmnt_continued','pythonParser.py',243),
  ('elif_stmnt -> ELSE_IF expression COLON block','elif_stmnt',4,'p_elif_stmnt','pythonParser.py',251),
  ('elif_stmnt -> ELSE_IF expression COLON block elif_stmnt','elif_stmnt',5,'p_elif_stmnt_continued','pythonParser.py',258),
  ('elif_stmnt -> ELSE_IF expression COLON block else_statement','elif_stmnt',5,'p_elif_stmnt_continued','pythonParser.py',259),
  ('else_statement -> ELSE COLON block','else_statement',3,'p_else_stmnt','pythonParser.py',267),
  ('for_statement -> FOR for_stmnt_parameter_wrapper COLON block','for_statement',4,'p_for_statement','pythonParser.py',277),
  ('for_stmnt_parameter_wrapper -> id_ IN RANGE L_PARENTHESE expression R_PARENTHESE','for_stmnt_parameter_wrapper',6,'p_for_statement_parameter_wrapper','pythonParser.py',285),
  ('for_stmnt_parameter_wrapper -> id_ IN RANGE L_PARENTHESE integer_number R_PARENTHESE','for_stmnt_parameter_wrapper',6,'p_for_statement_parameter_wrapper','pythonParser.py',286),
  ('for_stmnt_parameter_wrapper -> id_ IN RANGE L_PARENTHESE integer_number COMMA integer_number R_PARENTHESE','for_stmnt_parameter_wrapper',8,'p_for_statement_parameter_wrapper','pythonParser.py',287),
  ('for_stmnt_parameter_wrapper -> id_ IN RANGE L_PARENTHESE integer_number COMMA integer_number COMMA integer_number R_PARENTHESE','for_stmnt_parameter_wrapper',10,'p_for_statement_parameter_wrapper','pythonParser.py',288),
  ('while_statement -> WHILE expression COLON block','while_statement',4,'p_while_statement','pythonParser.py',305),
  ('import_statement -> IMPORT id_','import_statement',2,'p_import_statement','pythonParser.py',315),
  ('import_statement -> FROM id_ IMPORT id_','import_statement',4,'p_import_from_statement','pythonParser.py',322),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','pythonParser.py',332),
  ('block -> NEWLINE INDENT statements DEDENT','block',4,'p_block_dedent','pythonParser.py',342),
  ('block -> statements','block',1,'p_block_statements','pythonParser.py',349),
  ('expressions_wrapper -> expressions','expressions_wrapper',1,'p_expressions_in_sequence_of_commas_wrapper','pythonParser.py',359),
  ('expressions -> expression','expressions',1,'p_expressions_in_sequence_of_commas','pythonParser.py',367),
  ('expressions -> expression COMMA expressions','expressions',3,'p_expressions_in_sequence_of_commas','pythonParser.py',368),
  ('expression -> LEN L_PARENTHESE expressions_wrapper R_PARENTHESE','expression',4,'p_expression_len','pythonParser.py',382),
  ('expression -> comparison_expressions','expression',1,'p_expressions_all','pythonParser.py',390),
  ('expression -> arithmetic_expression','expression',1,'p_expressions_all','pythonParser.py',391),
  ('expression -> function_call_expression','expression',1,'p_expressions_all','pythonParser.py',392),
  ('expression -> L_PARENTHESE expression R_PARENTHESE','expression',3,'p_expression','pythonParser.py',400),
  ('function_call_expression -> id_ L_PARENTHESE expressions_wrapper R_PARENTHESE','function_call_expression',4,'p_function_call_expr_in_parantheses','pythonParser.py',410),
  ('function_call_expression -> id_ L_PARENTHESE R_PARENTHESE','function_call_expression',3,'p_function_call_no_expr','pythonParser.py',417),
  ('function_call_expression -> id_ DOT function_call_expression','function_call_expression',3,'p_function_call_no_expr_with_dot','pythonParser.py',424),
  ('comparison_expressions -> comparison_expr_OR','comparison_expressions',1,'p_comparison_expr_top','pythonParser.py',444),
  ('comparison_expr_OR -> comparison_expr_OR OR comparison_expr_AND','comparison_expr_OR',3,'p_comparison_expr_OR','pythonParser.py',450),
  ('comparison_expr_OR -> comparison_expr_AND','comparison_expr_OR',1,'p_comparison_expr_OR','pythonParser.py',451),
  ('comparison_expr_AND -> comparison_expr_AND AND comparison_expr_high_prec','comparison_expr_AND',3,'p_comparison_expr_AND','pythonParser.py',461),
  ('comparison_expr_AND -> comparison_expr_high_prec','comparison_expr_AND',1,'p_comparison_expr_AND','pythonParser.py',462),
  ('comparison_expr_high_prec -> comparison_expr_high_prec EQUALS comparison_expr_base','comparison_expr_high_prec',3,'p_comparison_expr_high_prec','pythonParser.py',472),
  ('comparison_expr_high_prec -> comparison_expr_high_prec NOT_EQUALS comparison_expr_base','comparison_expr_high_prec',3,'p_comparison_expr_high_prec','pythonParser.py',473),
  ('comparison_expr_high_prec -> comparison_expr_high_prec LESS_THAN comparison_expr_base','comparison_expr_high_prec',3,'p_comparison_expr_high_prec','pythonParser.py',474),
  ('comparison_expr_high_prec -> comparison_expr_high_prec LESS_THAN_OR_EQ comparison_expr_base','comparison_expr_high_prec',3,'p_comparison_expr_high_prec','pythonParser.py',475),
  ('comparison_expr_high_prec -> comparison_expr_high_prec GREATER_THAN comparison_expr_base','comparison_expr_high_prec',3,'p_comparison_expr_high_prec','pythonParser.py',476),
  ('comparison_expr_high_prec -> comparison_expr_high_prec GREATER_THAN_OR_EQ comparison_expr_base','comparison_expr_high_prec',3,'p_comparison_expr_high_prec','pythonParser.py',477),
  ('comparison_expr_high_prec -> comparison_expr_base','comparison_expr_high_prec',1,'p_comparison_expr_high_prec','pythonParser.py',478),
  ('comparison_expr_high_prec -> NOT comparison_expr_base','comparison_expr_high_prec',2,'p_comparison_expr_high_prec','pythonParser.py',479),
  ('comparison_expr_base -> all_types','comparison_expr_base',1,'p_comparison_expr_base','pythonParser.py',493),
  ('comparison_expr_base -> id_','comparison_expr_base',1,'p_comparison_expr_base','pythonParser.py',494),
  ('comparison_expr_base -> arithmetic_expression','comparison_expr_base',1,'p_comparison_expr_base','pythonParser.py',495),
  ('comparison_expr_base -> function_call_expression','comparison_expr_base',1,'p_comparison_expr_base','pythonParser.py',496),
  ('comparison_expr_base -> L_PARENTHESE comparison_expressions R_PARENTHESE','comparison_expr_base',3,'p_comparison_expr_base_paranthesese','pythonParser.py',502),
  ('all_types -> boolean_types','all_types',1,'p_all_types','pythonParser.py',509),
  ('all_types -> id_','all_types',1,'p_all_types','pythonParser.py',510),
  ('all_types -> integer_number','all_types',1,'p_all_types','pythonParser.py',511),
  ('all_types -> float_number','all_types',1,'p_all_types','pythonParser.py',512),
  ('all_types -> string_object','all_types',1,'p_all_types','pythonParser.py',513),
  ('all_types -> list_object','all_types',1,'p_all_types','pythonParser.py',514),
  ('arithmetic_expression -> MINUS arithmetic_expression','arithmetic_expression',2,'p_arith_expr_unary_minus','pythonParser.py',525),
  ('arithmetic_expression -> arithmetic_expression PLUS term','arithmetic_expression',3,'p_arith_expr_plus','pythonParser.py',532),
  ('arithmetic_expression -> arithmetic_expression MINUS term','arithmetic_expression',3,'p_arith_expr_minus','pythonParser.py',537),
  ('arithmetic_expression -> term','arithmetic_expression',1,'p_arith_expr_term','pythonParser.py',542),
  ('term -> term MULTIPLY factor','term',3,'p_arith_term_multiply','pythonParser.py',547),
  ('term -> term DIVIDE factor','term',3,'p_arith_term_div','pythonParser.py',552),
  ('term -> factor','term',1,'p_arith_term_factor','pythonParser.py',557),
  ('term -> function_call_expression','term',1,'p_arith_term_factor','pythonParser.py',558),
  ('factor -> integer_number','factor',1,'p_arith_factor_num','pythonParser.py',564),
  ('factor -> float_number','factor',1,'p_arith_factor_num','pythonParser.py',565),
  ('factor -> id_','factor',1,'p_arith_factor_num','pythonParser.py',566),
  ('factor -> L_PARENTHESE arithmetic_expression R_PARENTHESE','factor',3,'p_arith_factor_expr','pythonParser.py',571),
  ('variable_assignment -> id_ EQUAL_ASSIGN expression','variable_assignment',3,'p_variable_assignment','pythonParser.py',580),
  ('variable_assignment -> id_ arithmetic_op EQUAL_ASSIGN arithmetic_expression','variable_assignment',4,'p_variable_operation_assignment','pythonParser.py',587),
  ('list_object -> L_BRACKET R_BRACKET','list_object',2,'p_list_object_empty','pythonParser.py',597),
  ('list_object -> L_BRACKET types_one_or_more_in_commas R_BRACKET','list_object',3,'p_list_filled','pythonParser.py',604),
  ('list_object -> L_BRACKET ids_one_or_more_in_commas R_BRACKET','list_object',3,'p_list_filled','pythonParser.py',605),
  ('list_element -> id_ L_BRACKET arithmetic_expression R_BRACKET','list_element',4,'p_list_element','pythonParser.py',612),
  ('ids_one_or_more_in_commas_wrapper -> ids_one_or_more_in_commas','ids_one_or_more_in_commas_wrapper',1,'p_ids_one_or_more_in_commas_wrapper','pythonParser.py',622),
  ('ids_one_or_more_in_commas -> id_','ids_one_or_more_in_commas',1,'p_ids_one_or_more_in_commas','pythonParser.py',629),
  ('ids_one_or_more_in_commas -> id_ COMMA types_one_or_more_in_commas','ids_one_or_more_in_commas',3,'p_ids_one_or_more_in_commas','pythonParser.py',630),
  ('types_one_or_more_in_commas -> all_types','types_one_or_more_in_commas',1,'p_types_one_or_more_in_commas','pythonParser.py',644),
  ('types_one_or_more_in_commas -> all_types COMMA integer_number_one_or_more_in_commas','types_one_or_more_in_commas',3,'p_types_one_or_more_in_commas','pythonParser.py',645),
  ('types_one_or_more_in_commas -> all_types COMMA boolean_types_one_or_more_in_commas','types_one_or_more_in_commas',3,'p_types_one_or_more_in_commas','pythonParser.py',646),
  ('types_one_or_more_in_commas -> all_types COMMA float_number_one_or_more_in_commas','types_one_or_more_in_commas',3,'p_types_one_or_more_in_commas','pythonParser.py',647),
  ('types_one_or_more_in_commas -> all_types COMMA string_object_one_or_more_in_commas','types_one_or_more_in_commas',3,'p_types_one_or_more_in_commas','pythonParser.py',648),
  ('types_one_or_more_in_commas -> all_types COMMA ids_one_or_more_in_commas','types_one_or_more_in_commas',3,'p_types_one_or_more_in_commas','pythonParser.py',649),
  ('boolean_types_one_or_more_in_commas -> boolean_types','boolean_types_one_or_more_in_commas',1,'p_boolean_one_or_more_in_commas','pythonParser.py',662),
  ('boolean_types_one_or_more_in_commas -> boolean_types COMMA types_one_or_more_in_commas','boolean_types_one_or_more_in_commas',3,'p_boolean_one_or_more_in_commas','pythonParser.py',663),
  ('integer_number_one_or_more_in_commas -> integer_number','integer_number_one_or_more_in_commas',1,'p_integer_one_or_more_in_commas','pythonParser.py',672),
  ('integer_number_one_or_more_in_commas -> integer_number COMMA types_one_or_more_in_commas','integer_number_one_or_more_in_commas',3,'p_integer_one_or_more_in_commas','pythonParser.py',673),
  ('float_number_one_or_more_in_commas -> float_number','float_number_one_or_more_in_commas',1,'p_float_one_or_more_in_commas','pythonParser.py',682),
  ('float_number_one_or_more_in_commas -> float_number COMMA types_one_or_more_in_commas','float_number_one_or_more_in_commas',3,'p_float_one_or_more_in_commas','pythonParser.py',683),
  ('string_object_one_or_more_in_commas -> string_object','string_object_one_or_more_in_commas',1,'p_string_one_or_more_in_commas','pythonParser.py',692),
  ('string_object_one_or_more_in_commas -> string_object COMMA types_one_or_more_in_commas','string_object_one_or_more_in_commas',3,'p_string_one_or_more_in_commas','pythonParser.py',693),
  ('arithmetic_op -> PLUS','arithmetic_op',1,'p_arithmetic_op','pythonParser.py',705),
  ('arithmetic_op -> MINUS','arithmetic_op',1,'p_arithmetic_op','pythonParser.py',706),
  ('arithmetic_op -> MULTIPLY','arithmetic_op',1,'p_arithmetic_op','pythonParser.py',707),
  ('arithmetic_op -> DIVIDE','arithmetic_op',1,'p_arithmetic_op','pythonParser.py',708),
  ('arithmetic_op -> POWER','arithmetic_op',1,'p_arithmetic_op','pythonParser.py',709),
  ('comparison_ops -> AND','comparison_ops',1,'p_comparison_ops','pythonParser.py',716),
  ('comparison_ops -> OR','comparison_ops',1,'p_comparison_ops','pythonParser.py',717),
  ('comparison_ops -> NOT','comparison_ops',1,'p_comparison_ops','pythonParser.py',718),
  ('comparison_ops -> EQUALS','comparison_ops',1,'p_comparison_ops','pythonParser.py',719),
  ('comparison_ops -> NOT_EQUALS','comparison_ops',1,'p_comparison_ops','pythonParser.py',720),
  ('comparison_ops -> LESS_THAN','comparison_ops',1,'p_comparison_ops','pythonParser.py',721),
  ('comparison_ops -> LESS_THAN_OR_EQ','comparison_ops',1,'p_comparison_ops','pythonParser.py',722),
  ('comparison_ops -> GREATER_THAN','comparison_ops',1,'p_comparison_ops','pythonParser.py',723),
  ('comparison_ops -> GREATER_THAN_OR_EQ','comparison_ops',1,'p_comparison_ops','pythonParser.py',724),
  ('id_ -> ID','id_',1,'p_parser_id_only_ID','pythonParser.py',735),
  ('id_ -> id_ DOT id_','id_',3,'p_parser_ID_dot_ID','pythonParser.py',742),
  ('id_ -> SELF DOT id_','id_',3,'p_parser_self_ID_dot_ID','pythonParser.py',749),
  ('id_ -> list_element','id_',1,'p_parser_list_element','pythonParser.py',757),
  ('TYPE -> BOOLEAN','TYPE',1,'p_types','pythonParser.py',763),
  ('TYPE -> FLOAT','TYPE',1,'p_types','pythonParser.py',764),
  ('TYPE -> STRING','TYPE',1,'p_types','pythonParser.py',765),
  ('TYPE -> INT','TYPE',1,'p_types','pythonParser.py',766),
  ('TYPE -> LIST','TYPE',1,'p_types','pythonParser.py',767),
  ('string_object -> STRING_LITERAL','string_object',1,'p_string_object','pythonParser.py',778),
  ('boolean_types -> TRUE','boolean_types',1,'p_boolean_type','pythonParser.py',787),
  ('boolean_types -> FALSE','boolean_types',1,'p_boolean_type','pythonParser.py',788),
  ('float_number -> number DOT number','float_number',3,'p_float_number_dot','pythonParser.py',796),
  ('integer_number -> number','integer_number',1,'p_integer_number','pythonParser.py',802),
  ('number -> DIGIT','number',1,'p_number','pythonParser.py',807),
  ('reserved_words_statement -> PASS','reserved_words_statement',1,'p_reserved_words_statement','pythonParser.py',817),
  ('reserved_words_statement -> RETURN','reserved_words_statement',1,'p_reserved_words_statement','pythonParser.py',818),
  ('reserved_words_statement -> CONTINUE','reserved_words_statement',1,'p_reserved_words_statement','pythonParser.py',819),
  ('reserved_words_statement -> BREAK','reserved_words_statement',1,'p_reserved_words_statement','pythonParser.py',820),
  ('reserved_words_statement -> SELF','reserved_words_statement',1,'p_reserved_words_statement','pythonParser.py',821),
  ('empty -> <empty>','empty',0,'p_empty','pythonParser.py',827),
]
